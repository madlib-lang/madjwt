import IO from "IO"

export type Algorithm
  = None
  | HS256
  | HS384
  | HS512
  | RS256
  | RS384
  | RS512
  | ES256
  | ES384
  | ES512
  | Term

type Field
  = StringType(String)
  | BooleanType(Boolean)
  | IntegerType(Integer)

string :: String -> Field
export string = StringType

boolean :: Boolean -> Field
export boolean = BooleanType

integer :: Integer -> Field
export integer = IntegerType

export alias Config = {
  claims :: Dictionary String Field,
  headers :: Dictionary String Field,
  algorithm :: Algorithm,
}

DEFAULT_CONFIG :: Config
export DEFAULT_CONFIG = {
  claims: {{}},
  headers: {{}},
  algorithm: HS256,
}


sign :: String -> String -> String
sign = extern "madjwt__sign"

decode :: String -> String -> String
decode = extern "madjwt__decode"

main = () => {
  token = sign("some content", "key")
  IO.putLine(token)
  IO.putLine(decode(token, "key"))
}
